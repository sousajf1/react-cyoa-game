{"version":3,"sources":["components/map/index.tsx","components/sprite/index.tsx","components/actor/index.tsx","components/player/index.tsx","hooks/use-key-press/index.tsx","hooks/use-walk/index.tsx","config/maps/index.tsx","components/world/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTileSprite","value","MapTile","className","style","height","width","MapRow","tiles","map","tile","Map","position","margin","backgroundColor","row","Sprite","image","data","y","x","h","w","top","left","backgroundImage","backgroundRepeat","backgroundPosition","Actor","sprite","step","dir","dataReceived","Player","fn","maxSteps","useState","setPosition","setDir","setStep","directions","modifier","move","prev","posToCheck","MAP_WIDTH","MAP_HEIGHT","walk","console","useWalk","e","key","replace","toLowerCase","preventDefault","useEffect","window","addEventListener","removeEventListener","World","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c217289c.chunk.js","sourcesContent":["import React from \"react\";\nimport './styles.css';\n\n\ninterface TilesMatrix{\n    tiles: number[][];\n}\ninterface TilesArray{\n    tiles: number[];\n}\ninterface Tile{\n    value: number;\n}\n\n\n\nexport const getTileSprite = (value: number) => {\n    switch (value as any){\n        case 0:\n            return 'grass';\n        case 1:\n            return 'rock';\n        case 2:\n            return 'signpost';\n    }\n}\n\n\n\nexport const MapTile: React.FC<Tile> =({value}) => {\n    return <div className={`tile ${getTileSprite(value)}`}\n    style={{\n        height: \"28px\",\n        width: \"32px\",\n    }}/>\n}\n\nexport const MapRow: React.FC<TilesArray> = ({tiles}) => {\n    return <div className=\"row\">\n        {\n            tiles.map(tile => <MapTile value={tile}/>)\n        }\n    </div>\n}\n\nexport const Map: React.FC<TilesMatrix> = ({tiles}) => {\n    return <div\n        style={{\n            position: \"relative\",\n            width: \"800px\",\n            height: \"400px\",\n            margin: \"20px auto\",\n            backgroundColor: \"#fff59d\",\n        }}>\n        {\n            tiles.map(row => <MapRow tiles={row} />)\n        }\n    </div>\n};","import React from \"react\";\n\ntype Data = {\n    y: number;\n    x: number;\n    h: number;\n    w: number;\n};\ninterface Props {\n    image: string;\n    data: Data;\n    position: {x: number, y: number};\n\n}\n\nexport const Sprite: React.FC<Props> = ({image, data, position}) => {\n    const {y , x , h, w } = data;\n    return <div\n        style={{\n            position:\"absolute\",\n            top: position.y,\n            left: position.x,\n            height: `${h}px`,\n            width: `${w}px`,\n            backgroundImage: `url(${image})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: `-${x}px -${y}px`\n        }}/>\n};","import React from \"react\";\n\nimport {Sprite} from \"../sprite\";\n\ninterface Props {\n    sprite: string;\n    data: Data;\n    position: { x: number, y: number };\n    step: number;\n    dir: number;\n}\n\ntype Data = {\n    h: number;\n    w: number;\n};\n\nexport const Actor: React.FC<Props> = ({sprite, data, position={x:0, y:0},\n                                           step = 0, dir = 0}) => {\n    const dataReceived: Data = data;\n    return (\n        <Sprite\n            image ={sprite}\n            position={position}\n            data = {{\n                y:dir * dataReceived.h,\n                x:step * dataReceived.w,\n                h: dataReceived.h,\n                w: dataReceived.w,\n            }}\n        />\n    );\n};","import React from \"react\";\nimport {Actor} from \"../actor\";\nimport {useKeyPress} from \"../../hooks/use-key-press\";\nimport {useWalk} from \"../../hooks/use-walk\";\n\nexport const Player = () => {\n    const {dir, step, walk, position } = useWalk(3)\n    const data = {\n        h: 32,\n        w: 32,\n    };\n\n    useKeyPress((e: KeyboardEvent) => {\n        walk(e.key.replace(\"Arrow\", \"\").toLowerCase());\n        e.preventDefault();\n    })\n    const img: string = \"./images/m1.png\";\n    return <Actor sprite={img} data={data} step={step} dir={dir} position={position}/>\n}","import {useEffect} from \"react\";\n\nexport const useKeyPress = (fn: { (e: KeyboardEvent): void;\n    (this: Window, ev: KeyboardEvent): any;\n    (this: Window, ev: KeyboardEvent): any; }) => {\n        useEffect(() => {\n            window.addEventListener(\"keydown\", fn);\n            return () => window.removeEventListener(\"keydown\", fn);\n        }, [fn])\n}","import {useState} from \"react\";\nimport {MAP_HEIGHT} from \"../../config/constants\";\nimport {MAP_WIDTH} from \"../../config/constants\";\n\nexport const useWalk = (maxSteps: number) => {\n    const [position, setPosition] = useState({x: 0, y: 0})\n    const [dir, setDir] = useState(0)\n    const [step, setStep] = useState(0)\n    const directions = {\n        \"down\": 0,\n        \"left\": 1,\n        \"right\": 2,\n        \"up\": 3,\n    };\n\n    const stepSize = 16;\n    const modifier = {\n        \"down\": {x: 0, y: stepSize},\n        \"left\": {x: -stepSize, y: 0},\n        \"right\": {x: stepSize, y: 0},\n        \"up\": {x: 0, y: -stepSize},\n    }\n\n    const walk = (dir: string) => {\n        console.dir();\n        setDir(prev => {\n            // @ts-ignore\n            if(directions[dir] === prev) move(dir);\n            // @ts-ignore\n            return directions[dir];\n        });\n        setStep(prev =>prev < maxSteps - 1 ? prev + 1 : 0)\n    }\n\n    const move = (dir: string) => {\n        setPosition(prev => {\n            // @ts-ignore\n            // @ts-ignore\n            // @ts-ignore\n            const posToCheck = {x: prev.x + modifier[dir].x,\n                // @ts-ignore\n                y: prev.y + modifier[dir].y,\n            }\n\n            if((posToCheck.x <= MAP_WIDTH - 32 && posToCheck.x >= 0)\n                && (posToCheck.y <= MAP_HEIGHT - 32 && posToCheck.y>= 0)){\n                return {x: posToCheck.x,\n                    y: posToCheck.y,\n                };\n            }else{\n                return {x: prev.x, y: prev.y};\n            }\n        })\n    }\n    return{\n        walk,dir, step, position\n    }\n};","export const tiles = [\n    [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\n]","import React from \"react\";\nimport {Map} from \"../map\";\nimport {Player} from \"../player\";\nimport {tiles} from \"../../config/maps\";\n\nexport const World = () => {\n    // @ts-ignore\n    return <div\n            style={{\n                position: \"relative\",\n                width: \"800px\",\n                height: \"400px\",\n                margin: \"20px auto\"\n            }}>\n\n           <Map tiles={tiles} />\n           <Player />\n        </div>\n};","import React from 'react';\nimport {World} from \"./components/world\";\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <World/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}